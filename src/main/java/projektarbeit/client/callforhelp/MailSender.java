package projektarbeit.client.callforhelp;

import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;

public class MailSender {

    final private String sender = "projektarbeit@jconen.de";
    final private String host = "wp332.webpack.hosteurope.de";
    final private String username = "wp12219867-projektarbeit";
    final private String password = "projekt135!";
    final private String msgText = "Hello, \n \n"
            + "I need help. Please come. Something happened. \n \n"
            + "This message has been autogenerated by an Alexa skill. \n";


    private String recipient = null;
    Properties properties = System.getProperties();
    Session session = null;

    public MailSender() {
        this.recipient = "johannesconen@gmail.com";
        session = initProperties();
    }

    public MailSender(String recipient) {
        this.recipient = recipient;
        session = initProperties();
    }

    private Session initProperties() {
        // Properties for Sending
        properties.setProperty("mail.smtp.host", host);

        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");

        Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });
        return session;
    }

    public void send() {
	 try{
	    // Create a default MimeMessage object.
	    MimeMessage message = new MimeMessage(session);

	    // Set From: header field of the header.
	    message.setFrom(new InternetAddress(sender));

	    // Set To: header field of the header.
	    message.addRecipient(Message.RecipientType.TO, new InternetAddress(recipient));

	    // Set Subject: header field
	    message.setSubject("Emergency Call!");

	    // Now set the actual message
	    message.setText(msgText);

	    // Send message
	    Transport.send(message);
	 }catch (MessagingException mex) {
	    mex.printStackTrace();
	 }
 }
 
 
}